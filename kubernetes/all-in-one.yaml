apiVersion: v1
kind: ConfigMap
metadata:
  name: podnat-state-store
  labels:
    app: podnat-state-store
data:
  PUID: "501"
  PGID: "20"
  TZ: "Europe/Berlin"
  SERVER_NAMES: "podnat-state-store.kube-system.svc.cluster.local"
  TIMEOUTS_S: "20"
  CLIENT_MAX_BODY_SIZE: "1M"
---
apiVersion: v1
kind: Service
metadata:
  name: podnat-state-store
  labels:
    app: podnat-state-store
spec:
  ports:
  - port: 80
    name: webdav
  type: ClusterIP
  selector:
    app: podnat-state-store
---
apiVersion: v1
kind: Service
metadata:
  name: podnat-state-store-headless
  labels:
    app: podnat-state-store
spec:
  ports:
  - port: 80
    name: webdav
  clusterIP: None
  selector:
    app: podnat-state-store
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: podnat-state-store
spec:
  serviceName: "podnat-state-store"
  replicas: 1
  selector:
    matchLabels:
      app: podnat-state-store
  template:
    metadata:
      labels:
        app: podnat-state-store
    spec:
      containers:
      - name: nginx
        image: registry.lan:5000/dgraziotin/nginx-webdav-nononsense:1.23.1
        ports:
        - containerPort: 80
          name: nginx
        envFrom:
        - configMapRef: 
            name: podnat-state-store
        volumeMounts:
        - name: podnat-state-store
          mountPath: /data
      nodeSelector:
        topology.kubernetes.io/region: helsinki
  volumeClaimTemplates:
  - metadata:
      name: podnat-state-store
    spec:
      storageClassName: fast
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: podnat-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: podnat-controller
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: podnat-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: podnat-controller
subjects:
  - kind: ServiceAccount
    name: podnat-controller
    namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: podnat-controller
  labels:
    app.kubernetes.io/name: podnat-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: podnat-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: podnat-controller
    spec:
      serviceAccountName: podnat-controller
      hostNetwork: true
      containers:
      - name: podnat-controller
        image: registry.lan:5000/gutmensch/podnat-controller:0.0.12
        command: []
        args:
          - -logtostderr
        ports:
        - containerPort: 8484
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8484
          initialDelaySeconds: 20
          periodSeconds: 10
        securityContext:
          privileged: false
          capabilities:
            add: ["NET_ADMIN"]
